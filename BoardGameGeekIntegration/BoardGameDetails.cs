//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=4.6.1055.0.
// 
namespace BoardGameGeekIntegration {
    using System.Xml.Serialization;
    
    
    /// <uwagi/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class boardgames {
        
        private boardgamesBoardgame boardgameField;
        
        private string termsofuseField;
        
        /// <uwagi/>
        public boardgamesBoardgame boardgame {
            get {
                return this.boardgameField;
            }
            set {
                this.boardgameField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string termsofuse {
            get {
                return this.termsofuseField;
            }
            set {
                this.termsofuseField = value;
            }
        }
    }
    
    /// <uwagi/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class boardgamesBoardgame {
        
        private object[] itemsField;
        
        private ItemsChoiceType[] itemsElementNameField;
        
        private uint objectidField;
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlElementAttribute("age", typeof(byte))]
        [System.Xml.Serialization.XmlElementAttribute("boardgameaccessory", typeof(boardgamesBoardgameBoardgameaccessory))]
        [System.Xml.Serialization.XmlElementAttribute("boardgameartist", typeof(boardgamesBoardgameBoardgameartist))]
        [System.Xml.Serialization.XmlElementAttribute("boardgamecategory", typeof(boardgamesBoardgameBoardgamecategory))]
        [System.Xml.Serialization.XmlElementAttribute("boardgamecompilation", typeof(boardgamesBoardgameBoardgamecompilation))]
        [System.Xml.Serialization.XmlElementAttribute("boardgamedesigner", typeof(boardgamesBoardgameBoardgamedesigner))]
        [System.Xml.Serialization.XmlElementAttribute("boardgameexpansion", typeof(boardgamesBoardgameBoardgameexpansion))]
        [System.Xml.Serialization.XmlElementAttribute("boardgamefamily", typeof(boardgamesBoardgameBoardgamefamily))]
        [System.Xml.Serialization.XmlElementAttribute("boardgamehonor", typeof(boardgamesBoardgameBoardgamehonor))]
        [System.Xml.Serialization.XmlElementAttribute("boardgamemechanic", typeof(boardgamesBoardgameBoardgamemechanic))]
        [System.Xml.Serialization.XmlElementAttribute("boardgamepodcastepisode", typeof(boardgamesBoardgameBoardgamepodcastepisode))]
        [System.Xml.Serialization.XmlElementAttribute("boardgamepublisher", typeof(boardgamesBoardgameBoardgamepublisher))]
        [System.Xml.Serialization.XmlElementAttribute("boardgamesubdomain", typeof(boardgamesBoardgameBoardgamesubdomain))]
        [System.Xml.Serialization.XmlElementAttribute("boardgameversion", typeof(boardgamesBoardgameBoardgameversion))]
        [System.Xml.Serialization.XmlElementAttribute("description", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("image", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("maxplayers", typeof(byte))]
        [System.Xml.Serialization.XmlElementAttribute("maxplaytime", typeof(byte))]
        [System.Xml.Serialization.XmlElementAttribute("minplayers", typeof(byte))]
        [System.Xml.Serialization.XmlElementAttribute("minplaytime", typeof(byte))]
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(boardgamesBoardgameName))]
        [System.Xml.Serialization.XmlElementAttribute("playingtime", typeof(byte))]
        [System.Xml.Serialization.XmlElementAttribute("poll", typeof(boardgamesBoardgamePoll))]
        [System.Xml.Serialization.XmlElementAttribute("thumbnail", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("yearpublished", typeof(ushort))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint objectid {
            get {
                return this.objectidField;
            }
            set {
                this.objectidField = value;
            }
        }
    }
    
    /// <uwagi/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class boardgamesBoardgameBoardgameaccessory {
        
        private uint objectidField;
        
        private string valueField;
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint objectid {
            get {
                return this.objectidField;
            }
            set {
                this.objectidField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <uwagi/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class boardgamesBoardgameBoardgameartist {
        
        private ushort objectidField;
        
        private string valueField;
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort objectid {
            get {
                return this.objectidField;
            }
            set {
                this.objectidField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <uwagi/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class boardgamesBoardgameBoardgamecategory {
        
        private ushort objectidField;
        
        private string valueField;
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort objectid {
            get {
                return this.objectidField;
            }
            set {
                this.objectidField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <uwagi/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class boardgamesBoardgameBoardgamecompilation {
        
        private uint objectidField;
        
        private string valueField;
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint objectid {
            get {
                return this.objectidField;
            }
            set {
                this.objectidField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <uwagi/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class boardgamesBoardgameBoardgamedesigner {
        
        private ushort objectidField;
        
        private string valueField;
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort objectid {
            get {
                return this.objectidField;
            }
            set {
                this.objectidField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <uwagi/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class boardgamesBoardgameBoardgameexpansion {
        
        private uint objectidField;
        
        private string valueField;
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint objectid {
            get {
                return this.objectidField;
            }
            set {
                this.objectidField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <uwagi/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class boardgamesBoardgameBoardgamefamily {
        
        private ushort objectidField;
        
        private string valueField;
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort objectid {
            get {
                return this.objectidField;
            }
            set {
                this.objectidField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <uwagi/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class boardgamesBoardgameBoardgamehonor {
        
        private ushort objectidField;
        
        private string valueField;
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort objectid {
            get {
                return this.objectidField;
            }
            set {
                this.objectidField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <uwagi/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class boardgamesBoardgameBoardgamemechanic {
        
        private ushort objectidField;
        
        private string valueField;
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort objectid {
            get {
                return this.objectidField;
            }
            set {
                this.objectidField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <uwagi/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class boardgamesBoardgameBoardgamepodcastepisode {
        
        private uint objectidField;
        
        private string valueField;
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint objectid {
            get {
                return this.objectidField;
            }
            set {
                this.objectidField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <uwagi/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class boardgamesBoardgameBoardgamepublisher {
        
        private ushort objectidField;
        
        private string valueField;
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort objectid {
            get {
                return this.objectidField;
            }
            set {
                this.objectidField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <uwagi/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class boardgamesBoardgameBoardgamesubdomain {
        
        private ushort objectidField;
        
        private string valueField;
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort objectid {
            get {
                return this.objectidField;
            }
            set {
                this.objectidField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <uwagi/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class boardgamesBoardgameBoardgameversion {
        
        private uint objectidField;
        
        private string valueField;
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint objectid {
            get {
                return this.objectidField;
            }
            set {
                this.objectidField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <uwagi/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class boardgamesBoardgameName {
        
        private bool primaryField;
        
        private bool primaryFieldSpecified;
        
        private byte sortindexField;
        
        private string valueField;
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool primary {
            get {
                return this.primaryField;
            }
            set {
                this.primaryField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool primarySpecified {
            get {
                return this.primaryFieldSpecified;
            }
            set {
                this.primaryFieldSpecified = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte sortindex {
            get {
                return this.sortindexField;
            }
            set {
                this.sortindexField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <uwagi/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class boardgamesBoardgamePoll {
        
        private boardgamesBoardgamePollResults[] resultsField;
        
        private string nameField;
        
        private string titleField;
        
        private ushort totalvotesField;
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlElementAttribute("results")]
        public boardgamesBoardgamePollResults[] results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort totalvotes {
            get {
                return this.totalvotesField;
            }
            set {
                this.totalvotesField = value;
            }
        }
    }
    
    /// <uwagi/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class boardgamesBoardgamePollResults {
        
        private boardgamesBoardgamePollResultsResult[] resultField;
        
        private string numplayersField;
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlElementAttribute("result")]
        public boardgamesBoardgamePollResultsResult[] result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string numplayers {
            get {
                return this.numplayersField;
            }
            set {
                this.numplayersField = value;
            }
        }
    }
    
    /// <uwagi/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class boardgamesBoardgamePollResultsResult {
        
        private string valueField;
        
        private ushort numvotesField;
        
        private byte levelField;
        
        private bool levelFieldSpecified;
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ushort numvotes {
            get {
                return this.numvotesField;
            }
            set {
                this.numvotesField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
        /// <uwagi/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool levelSpecified {
            get {
                return this.levelFieldSpecified;
            }
            set {
                this.levelFieldSpecified = value;
            }
        }
    }
    
    /// <uwagi/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public enum ItemsChoiceType {
        
        /// <uwagi/>
        age,
        
        /// <uwagi/>
        boardgameaccessory,
        
        /// <uwagi/>
        boardgameartist,
        
        /// <uwagi/>
        boardgamecategory,
        
        /// <uwagi/>
        boardgamecompilation,
        
        /// <uwagi/>
        boardgamedesigner,
        
        /// <uwagi/>
        boardgameexpansion,
        
        /// <uwagi/>
        boardgamefamily,
        
        /// <uwagi/>
        boardgamehonor,
        
        /// <uwagi/>
        boardgamemechanic,
        
        /// <uwagi/>
        boardgamepodcastepisode,
        
        /// <uwagi/>
        boardgamepublisher,
        
        /// <uwagi/>
        boardgamesubdomain,
        
        /// <uwagi/>
        boardgameversion,
        
        /// <uwagi/>
        description,
        
        /// <uwagi/>
        image,
        
        /// <uwagi/>
        maxplayers,
        
        /// <uwagi/>
        maxplaytime,
        
        /// <uwagi/>
        minplayers,
        
        /// <uwagi/>
        minplaytime,
        
        /// <uwagi/>
        name,
        
        /// <uwagi/>
        playingtime,
        
        /// <uwagi/>
        poll,
        
        /// <uwagi/>
        thumbnail,
        
        /// <uwagi/>
        yearpublished,
    }
}
